name: release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

env:
  AWS_REGION: eu-west-1
  AWS_ACCOUNT_ID: '010438484483'

permissions:
  contents: write
  id-token: write

jobs:
  build-push-images:
    name: Build and push images
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        include:
          - dockerfile: Dockerfile
            repo: amazonaws.com/cofide/spiffe-enable
            platform: linux/amd64
            runs-on: ubuntu-latest
            arch: amd64
          - dockerfile: Dockerfile
            repo: amazonaws.com/cofide/spiffe-enable
            platform: linux/arm64
            runs-on: connect-ci-runner-arm
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/connect-ecr-gh-actions-access
          role-session-name: connect-ecr-gh-actions-access
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          provenance: false # this is a fix needed to be able to merge the images in a new manifest list later on
          push: true
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{format('{0}.dkr.ecr.{1}.{2}:{3}-{4}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, matrix.arch, github.ref_name)}}

  build-merge-arch-images:
    runs-on: ubuntu-latest
    needs: build-push-images
    strategy:
      matrix:
        include:
          - repo: amazonaws.com/cofide/spiffe-enable
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{env.AWS_ACCOUNT_ID}}:role/connect-ecr-gh-actions-access
          role-session-name: connect-ecr-gh-actions-access
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: pull images
        run: |
          docker pull --platform linux/amd64 ${{format('{0}.dkr.ecr.{1}.{2}:amd64-{3}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, github.ref_name)}}
          docker pull --platform linux/arm64 ${{format('{0}.dkr.ecr.{1}.{2}:arm64-{3}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, github.ref_name)}}
      - name: Merge images
        run: |
          docker manifest create $IMAGE --amend $IMAGE_AMD64 --amend $IMAGE_ARM64
          docker manifest annotate $IMAGE $IMAGE_AMD64 --os linux --arch amd64
          docker manifest annotate $IMAGE $IMAGE_ARM64  --os linux --arch arm64
          docker manifest push $IMAGE
        env:
          IMAGE_AMD64: ${{format('{0}.dkr.ecr.{1}.{2}:amd64-{3}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, github.ref_name)}}
          IMAGE_ARM64: ${{format('{0}.dkr.ecr.{1}.{2}:arm64-{3}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, github.ref_name)}}
          IMAGE: ${{format('{0}.dkr.ecr.{1}.{2}:{3}', env.AWS_ACCOUNT_ID, env.AWS_REGION, matrix.repo, github.ref_name)}}
